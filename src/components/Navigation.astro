---
const currentPath = Astro.url.pathname;
import { navigationLinks } from "../config/navigationLinks.mjs";
---

<!-- Hamburger menu (visible on small screens) -->
<div class="z-40 block lg:hidden">
  <button id="hamburger-button" class="text-gray2 focus:outline-none" aria-label="Navigation menu button">
    <!-- Hamburger icon -->
    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="h-6 w-6">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M4 6h16M4 12h16M4 18h16"></path>
    </svg>
  </button>
</div>

<!-- Mobile menu dropdown (hidden by default) -->
<div id="mobile-menu" class="fixed inset-x-0 top-0 z-30 hidden h-[85vh] rounded-b-3xl bg-white bg-opacity-40 pt-20 backdrop-blur-xl">
  <div class="container mx-auto px-4">
    <ul class="flex flex-col items-center gap-6" id="mobile-nav-links">
      {
        navigationLinks.map((page) => (
          <li data-path={page[1]} class="nav-item font-jost text-[20px]">
            <a href={page[1]}>{page[0]}</a>
          </li>
        ))
      }
      <!-- Mobile Contact button -->
      <li class="mt-4 w-full max-w-xs">
        <a href="https://mikemassimino.paperform.co/" class="block w-full">
          <div
            class="flex justify-center rounded-2xl bg-gradient-to-b from-[#DA5F6B] via-[#E38A4C] to-[#F0CB78] px-3 py-2 text-center font-reddit text-[20px] font-light uppercase text-white"
          >
            Contact
          </div>
        </a>
      </li>
    </ul>
  </div>
</div>

<!-- Desktop menu -->
<div class="hidden items-center lg:flex">
  <ul class="mr-32 flex gap-x-4" id="desktop-nav-links">
    {
      navigationLinks.map((page) => (
        <li data-path={page[1]} class="nav-item font-jost text-[20px]">
          <a href={page[1]}>{page[0]}</a>
        </li>
      ))
    }
  </ul>
  <!-- Contact button -->
  <a href="https://mikemassimino.paperform.co/" class="z-20 mr-8 w-full">
    <div
      class="flex justify-center rounded-2xl bg-gradient-to-b from-[#DA5F6B] via-[#E38A4C] to-[#F0CB78] px-3 py-1 text-center font-reddit text-[20px] font-light uppercase text-white lg:py-2"
    >
      Contact
    </div>
  </a>
</div>

<script>
  // Hamburger menu toggle functionality
  document.addEventListener("DOMContentLoaded", () => {
    const hamburgerButton = document.getElementById("hamburger-button");
    const mobileMenu = document.getElementById("mobile-menu");

    // Toggle hamburger menu
    if (hamburgerButton && mobileMenu) {
      hamburgerButton.addEventListener("click", () => {
        mobileMenu.classList.toggle("hidden");

        // Prevent scrolling when menu is open
        document.body.classList.toggle("overflow-hidden");

        // Change hamburger to X when open
        const hamburgerIcon = hamburgerButton.querySelector("svg");
        if (hamburgerIcon) {
          if (mobileMenu.classList.contains("hidden")) {
            hamburgerIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M4 6h16M4 12h16M4 18h16"></path>';
          } else {
            hamburgerIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M6 18L18 6M6 6l12 12"></path>';
          }
        }
      });

      // Close menu when clicking on links
      const mobileLinks = mobileMenu.querySelectorAll("a");
      mobileLinks.forEach((link) => {
        link.addEventListener("click", () => {
          mobileMenu.classList.add("hidden");
          document.body.classList.remove("overflow-hidden");

          // Reset hamburger icon
          const hamburgerIcon = hamburgerButton.querySelector("svg");
          if (hamburgerIcon) {
            hamburgerIcon.innerHTML = '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="3" d="M4 6h16M4 12h16M4 18h16"></path>';
          }
        });
      });
    }

    // Set active nav link
    const highlightActiveLink = () => {
      const currentPath = window.location.pathname;

      // Get all nav items
      const navItems = document.querySelectorAll(".nav-item");

      // Remove active class from all items first
      navItems.forEach((item) => {
        item.classList.remove("bg-gradient-to-r", "from-orange", "to-red", "bg-[length:100%_3.5px]", "bg-no-repeat", "bg-bottom");
      });

      // Find matching items and add active class
      navItems.forEach((item) => {
        const itemPath = item.getAttribute("data-path");

        // Check if current path exactly matches the nav item path
        // or if we're on a subpage and the nav item is a parent section
        if (currentPath === itemPath || (itemPath !== "/" && currentPath.startsWith(itemPath))) {
          item.classList.add("bg-gradient-to-r", "from-orange", "to-red", "bg-[length:100%_3.5px]", "bg-no-repeat", "bg-bottom");
        }
      });
    };

    // Run on page load
    highlightActiveLink();

    // Re-run if SPA navigation is used (optional, for client routing)
    window.addEventListener("popstate", highlightActiveLink);
  });
</script>
